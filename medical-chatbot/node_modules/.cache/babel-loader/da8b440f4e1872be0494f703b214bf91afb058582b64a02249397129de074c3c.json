{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harikarthi\\\\project\\\\medical-chatbot\\\\src\\\\components\\\\InputBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useContext } from 'react';\nimport { sendMessageToAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nconst InputBox = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const {\n    messages,\n    setMessages,\n    loading,\n    setLoading\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    setLoading(true);\n    setInput(\"\");\n    try {\n      const reply = await sendMessageToAPI(input);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: reply\n      }]);\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"⚠️ Server error!\"\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message...\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: loading,\n      children: \"\\u27A4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(InputBox, \"9bXOuZy+QMSEQ/aDZYH4tRdBViI=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","createContext","useContext","sendMessageToAPI","jsxDEV","_jsxDEV","ChatContext","InputBox","_s","input","setInput","messages","setMessages","loading","setLoading","handleSend","trim","prev","sender","text","reply","handleKeyPress","e","key","className","children","type","placeholder","value","onChange","target","onKeyPress","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harikarthi/project/medical-chatbot/src/components/InputBox.js"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\r\nimport { sendMessageToAPI } from '../services/api';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst InputBox = () => {\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst { messages, setMessages, loading, setLoading } = useContext(ChatContext);\r\n\r\n\tconst handleSend = async () => {\r\n\t\tif (!input.trim()) return;\r\n\t\tsetMessages(prev => [...prev, { sender: \"user\", text: input }]);\r\n\t\tsetLoading(true);\r\n\t\tsetInput(\"\");\r\n\t\ttry {\r\n\t\t\tconst reply = await sendMessageToAPI(input);\r\n\t\t\tsetMessages(prev => [...prev, { sender: \"bot\", text: reply }]);\r\n\t\t} catch {\r\n\t\t\tsetMessages(prev => [...prev, { sender: \"bot\", text: \"⚠️ Server error!\" }]);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleKeyPress = (e) => {\r\n\t\tif (e.key === \"Enter\") handleSend();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"input-area\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Type your message...\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={e => setInput(e.target.value)}\r\n\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\tdisabled={loading}\r\n\t\t\t/>\r\n\t\t\t<button onClick={handleSend} disabled={loading}>➤</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEW,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EAE9E,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;IACnBJ,WAAW,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEV;IAAM,CAAC,CAAC,CAAC;IAC/DK,UAAU,CAAC,IAAI,CAAC;IAChBJ,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACH,MAAMU,KAAK,GAAG,MAAMjB,gBAAgB,CAACM,KAAK,CAAC;MAC3CG,WAAW,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC;MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,MAAM;MACPR,WAAW,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAmB,CAAC,CAAC,CAAC;IAC5E;IACAL,UAAU,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMO,cAAc,GAAIC,CAAC,IAAK;IAC7B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAER,UAAU,CAAC,CAAC;EACpC,CAAC;EAED,oBACCV,OAAA;IAAKmB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC1BpB,OAAA;MACCqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAEP,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MACxCG,UAAU,EAAEV,cAAe;MAC3BW,QAAQ,EAAEnB;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF/B,OAAA;MAAQgC,OAAO,EAAEtB,UAAW;MAACiB,QAAQ,EAAEnB,OAAQ;MAAAY,QAAA,EAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAER,CAAC;AAAC5B,EAAA,CAnCID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}