{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harikarthi\\\\project\\\\medical-chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport InputBox, { ChatContext } from './components/InputBox';\nimport './styles/chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const chatBoxRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"üëã Hi! I‚Äôm your health assistant. Say hi\"\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [conversationEnded, setConversationEnded] = useState(false);\n  // 0: wait hi, 1: wait name, 2: wait age, 3: ask concern, 4: ask severity, 5: normal\n  const [onboardingStep, setOnboardingStep] = useState(0);\n  const [userName, setUserName] = useState(\"\");\n  const [userAge, setUserAge] = useState(\"\");\n  const [userConcern, setUserConcern] = useState(\"\");\n  const [userSeverity, setUserSeverity] = useState(\"\");\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Custom send handler for onboarding\n  const handleSend = async input => {\n    if (!input.trim() || conversationEnded) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    if (onboardingStep === 0) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Hi what is your name?\"\n      }]);\n      setOnboardingStep(1);\n      return;\n    }\n    if (onboardingStep === 1) {\n      setUserName(input.trim());\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: `Nice to meet you, ${input.trim()}. How old are you?`\n      }]);\n      setOnboardingStep(2);\n      return;\n    }\n    if (onboardingStep === 2) {\n      setUserAge(input.trim());\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: `Thank you, ${userName}. You can now tell me your medical concern.`\n      }]);\n      setOnboardingStep(3);\n      return;\n    }\n    if (onboardingStep === 3) {\n      setUserConcern(input.trim());\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: `On a scale of 1 to 10, how severe is your problem? (1 = mild, 10 = severe)`\n      }]);\n      setOnboardingStep(4);\n      return;\n    }\n    if (onboardingStep === 4) {\n      setUserSeverity(input.trim());\n      setLoading(true);\n      try {\n        const reply = await import('./services/api').then(api => api.sendMessageToAPI(`Concern: ${userConcern}\\nSeverity: ${input.trim()}`, userName, userAge));\n        setMessages(prev => {\n          // If reply contains 'thank you' or 'thanks', end conversation\n          const lowerReply = reply.toLowerCase();\n          if (lowerReply.includes('thank you') || lowerReply.includes('thanks')) {\n            setConversationEnded(true);\n          }\n          return [...prev, {\n            sender: \"bot\",\n            text: reply\n          }];\n        });\n      } catch {\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: \"‚ö†Ô∏è Server error!\"\n        }]);\n      }\n      setLoading(false);\n      setOnboardingStep(5);\n      return;\n    }\n    // Normal chat\n    setLoading(true);\n    try {\n      const reply = await import('./services/api').then(api => api.sendMessageToAPI(input, userName, userAge));\n      setMessages(prev => {\n        const lowerReply = reply.toLowerCase();\n        if (lowerReply.includes('thank you') || lowerReply.includes('thanks')) {\n          setConversationEnded(true);\n        }\n        return [...prev, {\n          sender: \"bot\",\n          text: reply\n        }];\n      });\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"‚ö†Ô∏è Server error!\"\n      }]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      loading,\n      setLoading,\n      handleSend,\n      conversationEnded\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83E\\uDD16 Health Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        chatBoxRef: chatBoxRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aVmuoZpecOhb5mnAVb9fsDa/fOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ChatBox","InputBox","ChatContext","jsxDEV","_jsxDEV","App","_s","chatBoxRef","messages","setMessages","sender","text","loading","setLoading","conversationEnded","setConversationEnded","onboardingStep","setOnboardingStep","userName","setUserName","userAge","setUserAge","userConcern","setUserConcern","userSeverity","setUserSeverity","current","scrollTop","scrollHeight","handleSend","input","trim","prev","reply","then","api","sendMessageToAPI","lowerReply","toLowerCase","includes","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harikarthi/project/medical-chatbot/src/App.js"],"sourcesContent":["\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport ChatBox from './components/ChatBox';\r\nimport InputBox, { ChatContext } from './components/InputBox';\r\nimport './styles/chatbot.css';\r\n\r\n\r\nfunction App() {\r\n  const chatBoxRef = useRef(null);\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"üëã Hi! I‚Äôm your health assistant. Say hi\" }\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [conversationEnded, setConversationEnded] = useState(false);\r\n  // 0: wait hi, 1: wait name, 2: wait age, 3: ask concern, 4: ask severity, 5: normal\r\n  const [onboardingStep, setOnboardingStep] = useState(0);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userAge, setUserAge] = useState(\"\");\r\n  const [userConcern, setUserConcern] = useState(\"\");\r\n  const [userSeverity, setUserSeverity] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) {\r\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  // Custom send handler for onboarding\r\n  const handleSend = async (input) => {\r\n    if (!input.trim() || conversationEnded) return;\r\n    setMessages(prev => [...prev, { sender: \"user\", text: input }]);\r\n\r\n    if (onboardingStep === 0) {\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"Hi what is your name?\" }]);\r\n      setOnboardingStep(1);\r\n      return;\r\n    }\r\n    if (onboardingStep === 1) {\r\n      setUserName(input.trim());\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: `Nice to meet you, ${input.trim()}. How old are you?` }]);\r\n      setOnboardingStep(2);\r\n      return;\r\n    }\r\n    if (onboardingStep === 2) {\r\n      setUserAge(input.trim());\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: `Thank you, ${userName}. You can now tell me your medical concern.` }]);\r\n      setOnboardingStep(3);\r\n      return;\r\n    }\r\n    if (onboardingStep === 3) {\r\n      setUserConcern(input.trim());\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: `On a scale of 1 to 10, how severe is your problem? (1 = mild, 10 = severe)` }]);\r\n      setOnboardingStep(4);\r\n      return;\r\n    }\r\n    if (onboardingStep === 4) {\r\n      setUserSeverity(input.trim());\r\n      setLoading(true);\r\n      try {\r\n        const reply = await import('./services/api').then(api => api.sendMessageToAPI(\r\n          `Concern: ${userConcern}\\nSeverity: ${input.trim()}`,\r\n          userName,\r\n          userAge\r\n        ));\r\n        setMessages(prev => {\r\n          // If reply contains 'thank you' or 'thanks', end conversation\r\n          const lowerReply = reply.toLowerCase();\r\n          if (lowerReply.includes('thank you') || lowerReply.includes('thanks')) {\r\n            setConversationEnded(true);\r\n          }\r\n          return [...prev, { sender: \"bot\", text: reply }];\r\n        });\r\n      } catch {\r\n        setMessages(prev => [...prev, { sender: \"bot\", text: \"‚ö†Ô∏è Server error!\" }]);\r\n      }\r\n      setLoading(false);\r\n      setOnboardingStep(5);\r\n      return;\r\n    }\r\n    // Normal chat\r\n    setLoading(true);\r\n    try {\r\n      const reply = await import('./services/api').then(api => api.sendMessageToAPI(input, userName, userAge));\r\n      setMessages(prev => {\r\n        const lowerReply = reply.toLowerCase();\r\n        if (lowerReply.includes('thank you') || lowerReply.includes('thanks')) {\r\n          setConversationEnded(true);\r\n        }\r\n        return [...prev, { sender: \"bot\", text: reply }];\r\n      });\r\n    } catch {\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"‚ö†Ô∏è Server error!\" }]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ messages, setMessages, loading, setLoading, handleSend, conversationEnded }}>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">ü§ñ Health Chatbot</div>\r\n        <ChatBox chatBoxRef={chatBoxRef} />\r\n        <InputBox />\r\n      </div>\r\n    </ChatContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,IAAIC,WAAW,QAAQ,uBAAuB;AAC7D,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CACvC;IAAEW,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAA2C,CAAC,CACpE,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjE;EACA,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,CAACmB,OAAO,EAAE;MACtBnB,UAAU,CAACmB,OAAO,CAACC,SAAS,GAAGpB,UAAU,CAACmB,OAAO,CAACE,YAAY;IAChE;EACF,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMqB,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,IAAIjB,iBAAiB,EAAE;IACxCL,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEtB,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEmB;IAAM,CAAC,CAAC,CAAC;IAE/D,IAAId,cAAc,KAAK,CAAC,EAAE;MACxBP,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEtB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAwB,CAAC,CAAC,CAAC;MAChFM,iBAAiB,CAAC,CAAC,CAAC;MACpB;IACF;IACA,IAAID,cAAc,KAAK,CAAC,EAAE;MACxBG,WAAW,CAACW,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzBtB,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEtB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,qBAAqBmB,KAAK,CAACC,IAAI,CAAC,CAAC;MAAqB,CAAC,CAAC,CAAC;MAC9Gd,iBAAiB,CAAC,CAAC,CAAC;MACpB;IACF;IACA,IAAID,cAAc,KAAK,CAAC,EAAE;MACxBK,UAAU,CAACS,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACxBtB,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEtB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,cAAcO,QAAQ;MAA8C,CAAC,CAAC,CAAC;MAC5HD,iBAAiB,CAAC,CAAC,CAAC;MACpB;IACF;IACA,IAAID,cAAc,KAAK,CAAC,EAAE;MACxBO,cAAc,CAACO,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5BtB,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEtB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAA6E,CAAC,CAAC,CAAC;MACrIM,iBAAiB,CAAC,CAAC,CAAC;MACpB;IACF;IACA,IAAID,cAAc,KAAK,CAAC,EAAE;MACxBS,eAAe,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC7BlB,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMoB,KAAK,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,gBAAgB,CAC3E,YAAYd,WAAW,eAAeQ,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,EACpDb,QAAQ,EACRE,OACF,CAAC,CAAC;QACFX,WAAW,CAACuB,IAAI,IAAI;UAClB;UACA,MAAMK,UAAU,GAAGJ,KAAK,CAACK,WAAW,CAAC,CAAC;UACtC,IAAID,UAAU,CAACE,QAAQ,CAAC,WAAW,CAAC,IAAIF,UAAU,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACrExB,oBAAoB,CAAC,IAAI,CAAC;UAC5B;UACA,OAAO,CAAC,GAAGiB,IAAI,EAAE;YAAEtB,MAAM,EAAE,KAAK;YAAEC,IAAI,EAAEsB;UAAM,CAAC,CAAC;QAClD,CAAC,CAAC;MACJ,CAAC,CAAC,MAAM;QACNxB,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAEtB,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAmB,CAAC,CAAC,CAAC;MAC7E;MACAE,UAAU,CAAC,KAAK,CAAC;MACjBI,iBAAiB,CAAC,CAAC,CAAC;MACpB;IACF;IACA;IACAJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMoB,KAAK,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,gBAAgB,CAACN,KAAK,EAAEZ,QAAQ,EAAEE,OAAO,CAAC,CAAC;MACxGX,WAAW,CAACuB,IAAI,IAAI;QAClB,MAAMK,UAAU,GAAGJ,KAAK,CAACK,WAAW,CAAC,CAAC;QACtC,IAAID,UAAU,CAACE,QAAQ,CAAC,WAAW,CAAC,IAAIF,UAAU,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;UACrExB,oBAAoB,CAAC,IAAI,CAAC;QAC5B;QACA,OAAO,CAAC,GAAGiB,IAAI,EAAE;UAAEtB,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAEsB;QAAM,CAAC,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACNxB,WAAW,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEtB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAmB,CAAC,CAAC,CAAC;IAC7E;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACET,OAAA,CAACF,WAAW,CAACsC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,QAAQ;MAAEC,WAAW;MAAEG,OAAO;MAAEC,UAAU;MAAEgB,UAAU;MAAEf;IAAkB,CAAE;IAAA4B,QAAA,eACzGtC,OAAA;MAAKuC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BtC,OAAA;QAAKuC,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpD3C,OAAA,CAACJ,OAAO;QAACO,UAAU,EAAEA;MAAW;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnC3C,OAAA,CAACH,QAAQ;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE3B;AAACzC,EAAA,CAlGQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAoGZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}