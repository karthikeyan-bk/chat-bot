{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harikarthi\\\\project\\\\medical-chatbot\\\\src\\\\pages\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatBox from '../components/ChatBox';\nimport InputBox from '../components/InputBox';\nimport { sendMessageToAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SYMPTOMS = [\"fever\", \"cold\", \"cough\", \"headache\", \"sore throat\", \"body pain\", \"flu\", \"chills\", \"runny nose\", \"fatigue\", \"sneezing\", \"vomiting\", \"diarrhea\", \"pain\", \"infection\"];\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello ðŸ‘‹ I am your medical assistant. What is your name and age?\"\n  }]);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [collectingInfo, setCollectingInfo] = useState(true);\n  const [selectedSymptom, setSelectedSymptom] = useState(SYMPTOMS[0]);\n  const handleInfoSubmit = e => {\n    e.preventDefault();\n    if (name.trim() && age.trim()) {\n      setMessages(prev => [...prev, {\n        sender: \"user\",\n        text: `My name is ${name} and my age is ${age}`\n      }, {\n        sender: \"bot\",\n        text: `Hi ${name}! What is your problem or symptoms?`\n      }]);\n      setCollectingInfo(false);\n    }\n  };\n  const handleSend = async text => {\n    const newMessage = {\n      sender: \"user\",\n      text\n    };\n    setMessages(prev => [...prev, newMessage]);\n    const botResponse = await sendMessageToAPI(text, name, age, selectedSymptom);\n    setMessages(prev => [...prev, {\n      sender: \"bot\",\n      text: botResponse\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), collectingInfo ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user-info-form\",\n      onSubmit: handleInfoSubmit,\n      style: {\n        display: 'flex',\n        gap: 8,\n        marginTop: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter your age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true,\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '8px 0',\n          display: 'flex',\n          alignItems: 'center',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"symptom-select\",\n          children: \"Symptom:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"symptom-select\",\n          value: selectedSymptom,\n          onChange: e => setSelectedSymptom(e.target.value),\n          children: SYMPTOMS.map(sym => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sym,\n            children: sym\n          }, sym, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"v8m8D9TTBSdiH8H0yDYVPHjaCP8=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","ChatBox","InputBox","sendMessageToAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","SYMPTOMS","ChatPage","_s","messages","setMessages","sender","text","name","setName","age","setAge","collectingInfo","setCollectingInfo","selectedSymptom","setSelectedSymptom","handleInfoSubmit","e","preventDefault","trim","prev","handleSend","newMessage","botResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","display","gap","marginTop","type","placeholder","value","onChange","target","required","min","margin","alignItems","htmlFor","id","map","sym","onSend","_c","$RefreshReg$"],"sources":["C:/Users/harikarthi/project/medical-chatbot/src/pages/ChatPage.js"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\nimport ChatBox from '../components/ChatBox';\r\nimport InputBox from '../components/InputBox';\r\nimport { sendMessageToAPI } from '../services/api';\r\n\r\nconst SYMPTOMS = [\r\n  \"fever\", \"cold\", \"cough\", \"headache\", \"sore throat\", \"body pain\", \"flu\", \"chills\", \"runny nose\", \"fatigue\", \"sneezing\", \"vomiting\", \"diarrhea\", \"pain\", \"infection\"\r\n];\r\n\r\nconst ChatPage = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello ðŸ‘‹ I am your medical assistant. What is your name and age?\" }\r\n  ]);\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [collectingInfo, setCollectingInfo] = useState(true);\r\n  const [selectedSymptom, setSelectedSymptom] = useState(SYMPTOMS[0]);\r\n\r\n\r\n  const handleInfoSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.trim() && age.trim()) {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        { sender: \"user\", text: `My name is ${name} and my age is ${age}` },\r\n        { sender: \"bot\", text: `Hi ${name}! What is your problem or symptoms?` }\r\n      ]);\r\n      setCollectingInfo(false);\r\n    }\r\n  };\r\n\r\n  const handleSend = async (text) => {\r\n    const newMessage = { sender: \"user\", text };\r\n    setMessages(prev => [...prev, newMessage]);\r\n\r\n    const botResponse = await sendMessageToAPI(text, name, age, selectedSymptom);\r\n    setMessages(prev => [...prev, { sender: \"bot\", text: botResponse }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <ChatBox messages={messages} />\r\n      {collectingInfo ? (\r\n        <form className=\"user-info-form\" onSubmit={handleInfoSubmit} style={{ display: 'flex', gap: 8, marginTop: 8 }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter your age\"\r\n            value={age}\r\n            onChange={e => setAge(e.target.value)}\r\n            required\r\n            min=\"1\"\r\n          />\r\n          <button type=\"submit\">Start Chat</button>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <div style={{ margin: '8px 0', display: 'flex', alignItems: 'center', gap: 8 }}>\r\n            <label htmlFor=\"symptom-select\">Symptom:</label>\r\n            <select\r\n              id=\"symptom-select\"\r\n              value={selectedSymptom}\r\n              onChange={e => setSelectedSymptom(e.target.value)}\r\n            >\r\n              {SYMPTOMS.map(sym => (\r\n                <option key={sym} value={sym}>{sym}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <InputBox onSend={handleSend} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}