{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harikarthi\\\\project\\\\medical-chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport InputBox, { ChatContext } from './components/InputBox';\nimport './styles/chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const chatBoxRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"üëã Hi! I‚Äôm your health assistant. Say hi\"\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [onboardingStep, setOnboardingStep] = useState(0); // 0: wait hi, 1: wait name, 2: wait age, 3: normal\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Custom send handler for onboarding\n  const handleSend = async input => {\n    if (!input.trim()) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    if (onboardingStep === 0) {\n      // After hi, ask for name\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"What is your name?\"\n      }]);\n      setOnboardingStep(1);\n      return;\n    }\n    if (onboardingStep === 1) {\n      // Save name, ask for age\n      setUserName(input.trim());\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: `Nice to meet you, ${input.trim()}. How old are you?`\n      }]);\n      setOnboardingStep(2);\n      return;\n    }\n    if (onboardingStep === 2) {\n      // Save age, continue normal chat\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: `Thank you, ${userName}. You can now tell me your medical concern.`\n      }]);\n      setOnboardingStep(3);\n      return;\n    }\n    // Normal chat\n    setLoading(true);\n    try {\n      // You can pass userName and age if you want to backend here\n      const reply = await import('./services/api').then(api => api.sendMessageToAPI(input));\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: reply\n      }]);\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"‚ö†Ô∏è Server error!\"\n      }]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      loading,\n      setLoading,\n      handleSend\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83E\\uDD16 Health Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        chatBoxRef: chatBoxRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G7hJ5869zX++Ti7pMnKxY4PZ23g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ChatBox","InputBox","ChatContext","jsxDEV","_jsxDEV","App","_s","chatBoxRef","messages","setMessages","sender","text","loading","setLoading","onboardingStep","setOnboardingStep","userName","setUserName","current","scrollTop","scrollHeight","handleSend","input","trim","prev","reply","then","api","sendMessageToAPI","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harikarthi/project/medical-chatbot/src/App.js"],"sourcesContent":["\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport ChatBox from './components/ChatBox';\r\nimport InputBox, { ChatContext } from './components/InputBox';\r\nimport './styles/chatbot.css';\r\n\r\n\r\nfunction App() {\r\n  const chatBoxRef = useRef(null);\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"üëã Hi! I‚Äôm your health assistant. Say hi\" }\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [onboardingStep, setOnboardingStep] = useState(0); // 0: wait hi, 1: wait name, 2: wait age, 3: normal\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) {\r\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  // Custom send handler for onboarding\r\n  const handleSend = async (input) => {\r\n    if (!input.trim()) return;\r\n    setMessages(prev => [...prev, { sender: \"user\", text: input }]);\r\n\r\n    if (onboardingStep === 0) {\r\n      // After hi, ask for name\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"What is your name?\" }]);\r\n      setOnboardingStep(1);\r\n      return;\r\n    }\r\n    if (onboardingStep === 1) {\r\n      // Save name, ask for age\r\n      setUserName(input.trim());\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: `Nice to meet you, ${input.trim()}. How old are you?` }]);\r\n      setOnboardingStep(2);\r\n      return;\r\n    }\r\n    if (onboardingStep === 2) {\r\n      // Save age, continue normal chat\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: `Thank you, ${userName}. You can now tell me your medical concern.` }]);\r\n      setOnboardingStep(3);\r\n      return;\r\n    }\r\n    // Normal chat\r\n    setLoading(true);\r\n    try {\r\n      // You can pass userName and age if you want to backend here\r\n      const reply = await import('./services/api').then(api => api.sendMessageToAPI(input));\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: reply }]);\r\n    } catch {\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"‚ö†Ô∏è Server error!\" }]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ messages, setMessages, loading, setLoading, handleSend }}>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">ü§ñ Health Chatbot</div>\r\n        <ChatBox chatBoxRef={chatBoxRef} />\r\n        <InputBox />\r\n      </div>\r\n    </ChatContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}